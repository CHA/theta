# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""Activity model"""
type Activity {
  createdBy: String!
  createdDate: Date!
  endTime: Date
  imageUrls: [String!]
  lastModifiedBy: String
  lastModifiedDate: Date
  name: String!
  place: Place!
  startTime: Date
  uuid: String!
}

input ActivityInput {
  endTime: Date
  imageUrl: [String!]
  name: String!
  place: PlaceInput!
  startTime: Date
}

input AuthLoginInput {
  password: String!
  username: String!
}

type City {
  country: String!
  createdBy: String!
  createdDate: Date!
  lastModifiedBy: String
  lastModifiedDate: Date
  name: String!
  uuid: String!
}

input CityInput {
  country: String!
  name: String!
}

"""Date custom scalar type"""
scalar Date

"""Itinerary model"""
type Itinerary {
  activities: [Activity!]!
  createdBy: String!
  createdDate: Date!
  lastModifiedBy: String
  lastModifiedDate: Date
  name: String!
  score: Int
  uuid: String!
}

input ItineraryInput {
  activities: [ActivityInput!]
  createdBy: String!
  name: String!
}

type Mutation {
  createItinerary(itinerary: ItineraryInput!): Itinerary!
  createUser(user: UserInput!): User!
  deleteUser(id: String!): String!
  follows(usernameA: String!, usernameB: String!): [User!]!
  login(input: AuthLoginInput!): UserToken!
}

type Place {
  address: String
  city: City!
  createdBy: String!
  createdDate: Date!
  lastModifiedBy: String
  lastModifiedDate: Date
  name: String!
  postCode: String
  tags: [String!]
  uuid: String!
}

input PlaceInput {
  address: String
  city: CityInput!
  name: String!
  postCode: String
  tags: [String!]
}

type Query {
  countUser: String!
  getFollowers(username: String!): [User!]!
  getFollowing(username: String!): [User!]!
  getUser(id: String!): User!
  searchItinerary(searchItineraryInput: SearchItineraryInput!): [Itinerary!]!
  searchUsers(keyword: String!): [User!]!
}

input SearchItineraryInput {
  keyword: String!
}

"""User model"""
type User {
  createdBy: String!
  createdDate: Date!
  email: String!
  firstName: String!
  followers: [User!]
  itineraries: [Itinerary!]
  lastModifiedBy: String
  lastModifiedDate: Date
  lastName: String
  phoneNumber: String
  uuid: String!
}

input UserInput {
  email: String!
  firstName: String!
  lastName: String
  password: String!
  phoneNumber: String
}

type UserToken {
  token: String!
  user: User!
}
